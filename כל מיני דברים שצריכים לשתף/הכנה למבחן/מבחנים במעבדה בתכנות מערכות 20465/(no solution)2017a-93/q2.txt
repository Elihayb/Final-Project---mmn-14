#include <stdio.h>
#include <stdlib.h>

/* auxiliary macro */
#define maxbit_mac(FUNC_NAME, TYPE) \
	int FUNC_NAME (void* var1, void* var2) { \
		int i, sum1 = 0, sum2 = 0; \
		int size = 8*sizeof(TYPE); \
		TYPE mask = 1; \
		for (i=0; i < size; i++) { \
			sum1 += !(mask & *((TYPE*)var1)); \
			sum2 += !(mask & *((TYPE*)var2)); \
			*((TYPE*)var1) >>= 1; \
			*((TYPE*)var2) >>= 1; \
		} \
		if (sum1 > sum2) \
			return sum1; \
		return sum2; \
	}

/* example of function declarations for different types */
maxbit_mac(int_maxbit, int);
maxbit_mac(long_maxbit, long);

/* requested summary function */
int maxbit(void* var1, void* var2, int (*func)(void*, void*)) {
	if (func == NULL)
		return 0;
	return (*func)(var1, var2);
}

/* main function */
int main() {
	printf("%d\n", sizeof(int));
	int int1 = 127;
	int int2 = 31;
	int sum = maxbit(&int1, &int2, int_maxbit);
	printf("The sum is %d\n", sum);
	return 0;
}